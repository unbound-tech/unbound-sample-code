swagger: '2.0'
info:
  title: Unbound’s Crypto Asset Security Platform (“CASP”) Management API
  version: 1.0.1901
  description: >-
    Unbound’s Crypto Asset Security Platform (\"CASP\") provides the advanced
    technology and the architecture to secure crypto asset transactions. The
    crypto asset solution contains the CASP service and different end points
    (humans or BOTs).


    CASP provides the framework to create **Accounts**, which hold multiple
    **Vaults** where secrets are stored. Access control is managed by the
    **Quorum Policy** for all of the **Participants**.

     The CASP system manages the following entities:

    - Accounts - a container for a set of vaults and participants that manage
    these vaults.

    - Participants - a human within the account or a BOT taking part in
    cryptoasset transactions. Each participant owns a share of the cryptographic
    material that is part of the different transactions.

    - Vaults - a secure container for the cryptographic material used to protect
    a crypto asset (i.e. the seed or private key).

    - Quorum vault - shares the responsibility of executing a transaction
    between many different participants in a structure defined by the vault
    policy.



    CASP is a collaboration service, where different participants collaborate to
    perform crypto asset transactions. As such, it has inherent support for
    asynchronous operation. When an operation is triggered, it is located in a
    queue and completed when the relevant set of participants complete their
    part. CASP supports triggering asynchronous operations, notifying the
    relevant participants on required actions, and checking the status of
    operations.



    For more information about the CASP SDK, see:


    - [Unbound CASP Participant
    SDK](https://www.unboundsecurity.com/docs/CASP/CASP_Developers_Guide-HTML/casp-dev-guide.htm)
    - information about the client-side SDK.

    - [Unbound CASP User Guide](
    https://www.unboundsecurity.com/docs/CASP/CASP_User_Guide-HTML/casp-user-guide.htm)
    - contains system requirements, installation instructions, and more.

    - [Unbound CASP Sample Apps](
    https://www.unboundsecurity.com/docs/CASP/CASP_Sample_Apps-HTML/casp-sample-apps.htm)
    - describes the sample web interface, mobile app for iOS, and the CASP BOT.
  contact:
    name: Unbound Tech Support
    url: 'https://www.unboundsecurity.com/'
    email: support@unboundsecurity.com
tags:
  - name: Getting Started
    description: >-
      Integrating CASP services within your server application, such as an
      exchange, a custodian service, or any other application managing crypto
      assets, is accomplished with the CASP REST API.

       This reference includes and operations for completing the full CASP life cycle, including:

       1.  Creating accounts
       2.  Adding participants to an account
       3.  Creating vaults
       4.  Depositing money into vaults
       5.  Withdrawing money from vaults
       6.  Managing keychains

       See the [Unbound CASP User Guide](https://www.unboundsecurity.com/docs/CASP/CASP_User_Guide-HTML/casp-user-guide.htm) for details about installing CASP.
       ## REST API Requests


       The API prefix for all CASP REST endpoints is:

       `https://&lt;casp-server&gt;/&lt;comp&gt;/api/v1.0/`

       The value for `&lt;comp&gt;` is *casp* for CASP requests, or the name of the coin type, such as *btc*.
       ## Supported Coins


       CASP provides built-in support for different coin types. A coin is a specific crypto currency that has its own associated ledger where transactions are recorded. CASP supports the following coin types:

       - btc - [bitcoin](https://en.wikipedia.org/wiki/Bitcoin)
       - btctest - bitcoin [Testnet3](https://en.bitcoin.it/wiki/Testnet)
       - eth - [Ethereum](https://www.ethereum.org/)
       - ethtest -
       Ethereum [testnet](https://www.blockcypher.com/dev/ethereum/)
       - ERC-20 - Ethereum blockchain tokens that are compliant with [ERC-20](https://en.wikipedia.org/wiki/ERC-20). A list of supported tokens can be found [here](https://etherscan.io/tokens).
       - stellar - [Stellar](https://www.stellar.org/)
       - stellartest - Stellar [testnet](https://www.stellar.org/developers/guides/concepts/test-net.html)

       New coin types are continually being added. If you need to support a different coin type, see the following section on BYOW.
       ## Bring Your Own Wallet (BYOW)


       CASP supports two types of implementations for handling different types of coins. CASP provides built-in support for some types of ledgers, as described in the previous section.

       CASP also provides the necessary APIs so that you can bring your own wallet (BYOW), meaning that you can use whatever ledger you have, and control the vault and key operations with CASP. Using BYOW, you can create an implementation that can handle any coin type, as well as any special operations that you use to communicate with your ledger and for ledger processing.

       You may want to use BYOW when using one of the built-in coin types, but need other features, such as using your own nodes and address caching. You may already have management in your application for one of the built-in coin types and want to use CASP for key management and protection. BYOW provides the flexibility to be used with any blockchain application.

      In these scenarios CASP handles key management, protection and signing
      operations based on the quorum specification. It is your responsibility to
      manage:


      1. Blockchain communication

      2. Building transactions

      3. Balance management and retrieval


      Setup the basic system components, accounts and participants, using the
      CASP APIs. Once the relevant participants exists, you can start creating
      your own vaults.
       ## Participant Flows


      Participants can be added to vaults, deactivated, and reactivated. The
      associated flow for each of these actions is shown in the following
      figures.


      ### Vault Creation


      ![Vault Creation](source/images/casp_flow_participant_vault.png)


      - Step 1: Create participants. You need enough participants to implement
      the quorum policy.

      - Step 2: Create a vault. During vault creation, participants are assigned
      to the relevant quorum groups.

      ### Add/Replace a Participant


      ![Vault Creation](source/images/casp_flow_replace_participant.png)


      - Step 1: Create a new participant (Participant B).

      - Step 2: Add this participant to the vault.

      - Step 3: If you are replacing a participant (Participant A), you can now
      deactivate that participant.


      **Note**: You cannot deactivate a participant if it violates the quorum
      policy. For example, if the quorum requires 2 participants for approval,
      and there are only 2 participants, you cannot remove either one. First,
      add a new participant (for a total of 3) and then one can be removed.


      **Note**: Participants can be deactivated either from a [specific
      vault](./casp.html#deactivate-a-vault-member) or [globally from all
      vaults](./casp.html#update-an-existing-participant).


      ### Deactivate/Reactivate a Participant


      ![Vault Creation](source/images/casp_flow_deactivate.png)


      A vault member can be deactivated as long as there are enough remaining
      participants for the quorum.


      You may need to reactivate a participant in this case:


      - Case 1: The participant lost or replaced their cellphone and needs to be
      re-credentialed.

      ## Error Handling

       Responses are formatted in the standard REST format, with a *status* field showing an error code and an *error* field with a text description of the error. The possible error codes are described with each API.

       For example, here is an *apikey* request:

       `https://&lt;casp-server&gt;/casp/api/v1.0/mng/auth/apikey`

       The error that is received is shown on the right.

       ``` HTTP/1.1 400
       Date: Mon, 05 Nov 2018 07:49:10 GMT
       Content-Type: application/problem+json
       Content-Length: 121
       {
       "type":"/mng/errors/operation-failed",
       "title":"Authentication failed",
       "details":"Password must be changed",
       "status":400
       }
       ```
  - name: Authentication
    description: >-
      CASP uses access tokens and API keys to add a layer of security to the API
      requests.


      - Long term access – for applications or scripts that require long term
      access, an API key with a one-year time limit can be created. The CASP
      Admin generates an API key by calling the **/auth/apikeys POST** operation
      (and providing the credentials). The returned API key must be added to the
      authorization header (as a bearer token) for every REST call. The Admin
      can generate several API keys for different app usages.

      - Short term access – for shorter access, such as for the web UI, the user
      can generate an access token that is valid for 20 minutes by calling the
      **/auth/tokens POST** operation. The access token must be added to the
      authorization header (as a bearer token) to every REST call.
  - name: Accounts
    description: >-
      An account is a container for a set of vaults and participants that manage
      these vaults. An account may represent a client of the system, a trader,
      an organization, etc. The CASP service supports creating different
      accounts, managing account participants (human users or machine BOT's),
      creating secure vaults for the account, and executing different crypto
      asset transactions within the account.


      The CASP service supports the notion of **global accounts**, which can
      manage vaults across other accounts. This notion can support the use case
      of the CASP service providers managing vaults on behalf of the CASP
      clients.
  - name: Participants
    description: >-
      A participant can be a human within the account or a BOT taking part in
      crypto asset transactions. Each participant owns a share of the
      cryptographic material that is part of the different transactions. CASP
      supports participants using any relevant platform, including mobile
      devices, laptops, and different server platforms for BOT's.
  - name: Vault Operations
    description: >-
      A vault is a secure container for the cryptographic material used to
      protect a crypto asset, such as the seed or private key. CASP uses
      Multiparty Computation (MPC) to split the crypto material between the
      different participants in the vault, which ensures that the material never
      exists in a single place. In addition, only the approved set of
      participants can complete a transaction based on the vault definition.


      A **Quorum** vault shares the responsibility of executing a transaction
      between many different participants in a structure defined by the vault
      policy. The vault policy contains a quorum-based structure where there are
      any number of groups, any threshold value per group, any tree structure
      between different groups, etc. The MPC protocols used by CASP ensure that
      if and only if the quorum definition is satisfied, a transaction can take
      place, which is enforced on the cryptographic level.


      Use the relevant endpoint based on the currency you want to work with. The
      list of supported currencies and the matching short names can be found in
      [Supported
      Coins](https://www.unboundsecurity.com/docs/CASP/casp.html#supported-coins).
      In this document, Bitcoin is used as an example.


      The main endpoints for vault management are:


      `/btctest/api/v1.0/accounts/{accountId}/vaults`


      and


      `/btctest/api/v1.0/vaults/{vaultId}`
  - name: Policy Management
    description: >-
      Approvals are defined by a group of authorizing entities, of which a
      minimal-size subset (called a quorum) is required to approve the
      transaction. M approvals from a set of N entities is known as \"MofN\".
      For example, the client may define 8 entities, of which 4 must approve the
      transaction. Another example is where there must be 3 approvals from group
      A and 2 approvals from group B.


      The number of groups, size of groups, and the size of the approving subset
      is fully flexible and can be different for each client. Every vault has an
      MofN policy associated with it, which is defined prior to the vault
      generation.
  - name: Keychain Management
    description: >-
      Some implementations require a higher level of anonymity, meaning that a
      key should only be used a minimal number of times before switching to a
      new key. To accomplish this goal, CASP provides keychains, known as
      [hierarchical
      deterministic](https://en.bitcoin.it/wiki/Deterministic_wallet) wallets
      (or \"HD Wallets\"). These keychains enable the creation of many keys for
      a single secret.


      Working with the currency layer, CASP supports a specific hierarchy
      structure as defined in the BIP44 scheme. This scheme supports the
      following:


      - Generating any number of sub-accounts within the same vault. You can use
      this approach for creating segregated accounts within the same vault.

      - Generating many addresses for each sub-account.


      This section describes the APIs for management of these keychains. If you
      require a different keychain structure, see the section on BYOW Keychain
      Management.
  - name: BYOW Vault Operations
    description: >-
      A vault is a secure container for the cryptographic material used to
      protect a crypto asset, such as the seed or private key. CASP uses
      Multiparty Computation (MPC) to split the crypto material between the
      different participants in the vault, which ensures that the material never
      exists in a single place. In addition, only the approved set of
      participants can complete a transaction based on the vault definition.


      A **Quorum** vault shares the responsibility of executing a transaction
      between many different participants in a structure defined by the vault
      policy. The vault policy contains a quorum-based structure where there are
      any number of groups, any threshold value per group, any tree structure
      between different groups, etc. The MPC protocols used by CASP ensure that
      if and only if the quorum definition is satisfied, a transaction can take
      place, which is enforced on the cryptographic level.


      These APIs provide added parameters that enable you to handle your own
      coin type.
  - name: BYOW Policy Management
    description: >-
      Approvals are defined by a group of authorizing entities, of which a
      minimal-size subset (called a quorum) is required to approve the
      transaction. M approvals from a set of N entities is known as \"MofN\".
      For example, the client may define 8 entities, of which 4 must approve the
      transaction. Another example is where there must be 3 approvals from group
      A and 2 approvals from group B.


      The number of groups, size of groups, and the size of the approving subset
      is fully flexible and can be different for each client. Every vault has an
      MofN policy associated with it, which is defined prior to the vault
      generation.
  - name: BYOW Keychain Management
    description: >-
      Some implementations require a higher level of anonymity, meaning that a
      key should only be used a minimal number of times before switching to a
      new key. To accomplish this goal, CASP provides keychains, known as
      [hierarchical
      deterministic](https://en.bitcoin.it/wiki/Deterministic_wallet) wallets
      (or \"HD Wallets\"). Working with the CASP layer allows you to build any
      hierarchy of your choice. These keychains enable the creation of many keys
      for a single secret.


      This section describes the APIs that enable you to create a different
      keychain structure to support your own coin type.
  - name: Backup
    description: >-
      CASP supports backing up key material and restoring the backup information
      for the different levels of the CASP entities: per vault, per sub-account
      (for HD wallets), and per specific address (for HD wallets).


      When backing up a key (instead of backing up a vault seed), the CASP
      backup mechanism supports a publicly verifiable backup. Using only the
      backup public key, you can verify that the encrypted data is indeed the EC
      private key, which matches the known EC public key.


      Two APIs are provided for backups:

       - Non-hierarchical and BIP32 vaults: [Get vault backup data](https://www.unboundsecurity.com/docs/CASP/casp.html#get-vault-backup-data)
       - BIP44 vaults: [Get backup for account](https://www.unboundsecurity.com/docs/CASP/casp.html#get-backup-for-account)
schemes:
  - https
paths:
  /casp/api/v1.0/mng/accounts:
    get:
      tags:
        - Accounts
      summary: List accounts
      description: List all accounts managed by the CASP service
      operationId: listAccounts
      produces:
        - application/json
      parameters:
        - name: withStats
          in: query
          description: Include additional info per account
          required: false
          type: boolean
        - name: filter
          in: query
          description: Search the account names
          required: false
          type: string
        - name: sort
          in: query
          description: >-
            Specify the column name to sort by and the sort direction. The
            format is '{column_name}:{asc/desc}'. The default sort is ascending.
            <br/><br/>The column name can be one of the following: Name, Global
          required: false
          type: string
        - name: skip
          in: query
          description: >-
            The number of results to skip from the beginning of the results
            after applying the filter and sort
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Items
                items:
                  type: object
                  required:
                    - id
                    - isGlobal
                    - name
                  properties:
                    id:
                      type: string
                      description: Account ID
                    name:
                      type: string
                      description: Account name
                    isGlobal:
                      type: boolean
                      description: 'Is global account '
        '400':
          description: Bad Request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: List accounts failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    post:
      tags:
        - Accounts
      summary: Create a new account
      description: Create a new account managed by the CASP service
      operationId: createAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Create accounts request
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: Account name
              isGlobal:
                type: boolean
                description: Is account global
      responses:
        '201':
          description: OK
          schema:
            type: object
            required:
              - id
              - isGlobal
              - name
            properties:
              id:
                type: string
                description: Account ID
              name:
                type: string
                description: Account name
              isGlobal:
                type: boolean
                description: 'Is global account '
        '409':
          description: Account already exists
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Create account failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/accounts/{id}':
    get:
      tags:
        - Accounts
      summary: Get account details
      description: Get account information about a specific account
      operationId: getAccount
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
        - name: withStats
          in: query
          description: Return detailed information about the account
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              required:
                - id
                - isGlobal
                - name
                - stats
              properties:
                id:
                  type: string
                  description: Account ID
                name:
                  type: string
                  description: Account name
                isGlobal:
                  type: boolean
                  description: 'Is global account '
                stats:
                  type: object
                  required:
                    - operations
                    - participants
                    - vaults
                  properties:
                    participants:
                      type: object
                      required:
                        - inactive
                        - total
                      properties:
                        total:
                          type: integer
                          format: int32
                          description: Total number of participants in the account
                        inactive:
                          type: integer
                          format: int32
                          description: Total number of inactive participants in the account
                    operations:
                      type: object
                      required:
                        - pending
                        - total
                      properties:
                        total:
                          type: integer
                          format: int32
                          description: The number of operations from the account
                        pending:
                          type: integer
                          format: int32
                          description: The number of operations that are still pending
                    vaults:
                      type: object
                      required:
                        - inactive
                        - total
                      properties:
                        total:
                          type: integer
                          format: int32
                          description: The number of vaults that belong to this account
                        inactive:
                          type: integer
                          format: int32
                          description: >-
                            The number of inactive vaults that belong to this
                            account
        '404':
          description: Not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get account details failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    put:
      tags:
        - Accounts
      summary: Update an existing account
      description: Update the parameters for a specific account
      operationId: updateAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
        - in: body
          name: body
          description: Update account request
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                description: Account name
              isGlobal:
                type: boolean
                description: Is account global
      responses:
        '200':
          description: OK
        '404':
          description: Account not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '409':
          description: 'Can''t change global property, Account already has participants'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Update account failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    delete:
      tags:
        - Accounts
      summary: Delete an account
      description: >-
        Delete an existing account. Only accounts with no vaults or participants
        may be deleted.
      operationId: deleteAccount
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Account not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Delete account failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/accounts/{id}/operations':
    get:
      tags:
        - Vault Operations
        - BYOW Vault Operations
      summary: List operations
      description: >-
        List operations associated with account vaults. By default, only
        operations which are in process (not completed) will be returned.
      operationId: listOperations
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
        - name: status
          in: query
          description: >-
            Show operations with one or more of the following statuses:
            approved, completed, pending, canceled, declined, failed
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: filter
          in: query
          description: Search the operation names and descriptions
          required: false
          type: string
        - name: sort
          in: query
          description: >-
            Specify the column name to sort by and the sort direction. The
            format is '{column_name}:{asc/desc}'. The default sort is
            ascending.<br/><br/>The column name can be one of the following:
            Vault, Kind, CreatedAt, StatusText, Description
          required: false
          type: string
        - name: skip
          in: query
          description: >-
            The number of results to skip from the beginning of the results
            after applying the filter and sort
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Items
                items:
                  type: object
                  required:
                    - accountID
                    - createdAt
                    - description
                    - isApproved
                    - kind
                    - operationID
                    - providerKind
                    - status
                    - statusText
                    - vaultID
                    - vaultName
                  properties:
                    operationID:
                      type: string
                      description: Operation ID
                    kind:
                      type: string
                      description: Request kind
                      enum:
                        - CREATE_VAULT
                        - ADD_MEMBER
                        - SIGN
                    status:
                      type: string
                      description: Operation status
                      enum:
                        - PENDING
                        - APPROVED
                        - COMPLETED
                        - DECLINED
                        - CANCELED
                        - FAILED
                        - ERROR
                    statusText:
                      type: string
                      description: Operation status text
                    createdAt:
                      type: string
                      description: Operation creation time
                    vaultID:
                      type: string
                      description: Vault ID
                    description:
                      type: string
                      description: Description of the operation
                    isApproved:
                      type: boolean
                      description: Approval state for the operation
                    accountID:
                      type: string
                      description: Account ID for the operation
                    vaultName:
                      type: string
                      description: Vault Name
                    providerKind:
                      type: string
                      description: Provider Kind
        '400':
          description: Bad Request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: List operations per account failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/accounts/{id}/participants':
    get:
      tags:
        - Participants
      summary: List participants
      description: >-
        List all participants in the account, which can be both humans and
        BOT's. An option is provided to include the deactivated participants.
      operationId: listParticipants
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
        - name: withGlobal
          in: query
          description: >-
            Include participants which take part in this account vaults and
            belong to a different global account
          required: false
          type: boolean
        - name: withDeactivated
          in: query
          description: Include deactivated participants
          required: false
          type: boolean
        - name: filter
          in: query
          description: Search the participant names
          required: false
          type: string
        - name: sort
          in: query
          description: >-
            Specify the column name to sort by and the sort direction. The
            format is '{column_name}:{asc/desc}'. The default sort is
            ascending.<br/><br/>The column name can be one of the following:
            Name, Status, Email
          required: false
          type: string
        - name: skip
          in: query
          description: >-
            The number of results to skip from the beginning of the results
            after applying the filter and sort
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Items
                items:
                  type: object
                  required:
                    - accountID
                    - accountName
                    - email
                    - id
                    - isActive
                    - name
                    - role
                    - status
                  properties:
                    id:
                      type: string
                      description: Participant ID
                    accountID:
                      type: string
                      description: Participant account ID
                    name:
                      type: string
                      description: Participant name
                    email:
                      type: string
                      description: Participant email
                    status:
                      type: string
                      description: Participant status
                      enum:
                        - NOT_ACTIVATED
                        - ACTIVATED
                        - DEACTIVATED
                    isActive:
                      type: boolean
                      description: Participant activation state
                    accountName:
                      type: string
                      description: Participant account name
                    role:
                      type: string
                      description: Participant role
        '400':
          description: Bad Request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Account not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: List participant per account failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    post:
      tags:
        - Participants
      summary: Create a new participant
      description: Create a new participant in the specified account
      operationId: createParticipant
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
        - in: body
          name: body
          description: Create participant request
          required: true
          schema:
            type: object
            required:
              - email
              - name
              - role
            properties:
              name:
                type: string
                description: ParticipantWithVault name
              email:
                type: string
                description: ParticipantWithVault email
              role:
                type: string
                description: ParticipantWithVault role
      responses:
        '201':
          description: New participant created successfully
          schema:
            type: object
            required:
              - activationCode
              - id
              - name
            properties:
              id:
                type: string
                description: ParticipantWithVault ID
              activationCode:
                type: string
                description: Activation code for the specified participant
              name:
                type: string
                description: ParticipantWithVault name
        '404':
          description: Account not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Email is not valid
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '409':
          description: ParticipantWithVault already exists
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Create new participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/accounts/{id}/vaults':
    get:
      tags:
        - BYOW Vault Operations
      summary: List BYOW vaults
      description: >-
        List all vaults in the account. By default only active vaults are
        listed.
      operationId: listVaults
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
        - name: withDeactivated
          in: query
          description: Include deactivated vaults
          required: false
          type: boolean
        - name: providerKind
          in: query
          description: Filter by coin type
          required: false
          type: string
        - name: filter
          in: query
          description: Search the vault names and descriptions
          required: false
          type: string
        - name: sort
          in: query
          description: >-
            Specify the column name to sort by and the sort direction. The
            format is '{column_name}:{asc/desc}'. The default sort is
            ascending.<br/><br/>The column name can be one of the following:
            Name, Provider, Description, Status
          required: false
          type: string
        - name: skip
          in: query
          description: >-
            The number of results to skip from the beginning of the results
            after applying the filter and sort
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Items
                items:
                  type: object
                  required:
                    - description
                    - hierarchy
                    - id
                    - isActive
                    - kind
                    - name
                    - pendingOperations
                    - providerData
                    - status
                    - statusText
                  properties:
                    id:
                      type: string
                      description: Vault ID
                    name:
                      type: string
                      description: Vault name
                    description:
                      type: string
                      description: Vault description
                    cryptoKind:
                      type: string
                      description: Type of cryptographic algorithm
                      enum:
                        - ECDSA
                        - EDDSA
                    providerKind:
                      type: string
                      description: Coin type that created the vault
                    kind:
                      type: string
                      description: Type of vault
                      enum:
                        - QUORUM
                        - PRIVATE
                    isActive:
                      type: boolean
                      description: Vault active state
                    status:
                      type: string
                      description: Vault status
                      enum:
                        - NOT_INITIALIZED
                        - INITIALIZED
                        - DEACTIVATED
                    statusText:
                      type: string
                      description: Vault status text
                    providerData:
                      type: string
                      description: >-
                        This is a field that can be used to store information in
                        the CASP database. The information can subsequently be
                        read back as needed.
                    pendingOperations:
                      type: integer
                      format: int64
                      description: Vault pending requests
                    hierarchy:
                      type: string
                      description: Vault status text
                      enum:
                        - NONE
                        - BIP32
                        - BIP44
        '400':
          description: Bad Request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Account not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: List vaults per account failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    post:
      tags:
        - BYOW Vault Operations
      summary: Create new vault
      description: >-
        This request starts the process of creating a new vault. The vault is
        created only after the participants approve the vault creation according
        to the vault policy.
      operationId: createVault
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
        - in: body
          name: body
          description: Create Vault Request
          required: true
          schema:
            type: object
            required:
              - cryptoKind
              - groups
              - name
            properties:
              name:
                type: string
                description: Vault name
              description:
                type: string
                description: Vault description
              groups:
                type: array
                description: Vault approval groups
                items:
                  type: object
                  required:
                    - members
                    - name
                    - requiredApprovals
                  properties:
                    name:
                      type: string
                      description: Vault group name
                    requiredApprovals:
                      type: integer
                      format: int32
                      description: Vault group required approvals
                    members:
                      type: array
                      description: Vault group participants
                      items:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
                            description: ParticipantWithVault ID
              cryptoKind:
                type: string
                description: Type of cryptographic algorithm
                enum:
                  - ECDSA
                  - EDDSA
              providerKind:
                type: string
                description: Type of crypto currency
              hierarchy:
                type: string
                description: Vault hierarchy. defaults to deterministic
                enum:
                  - NONE
                  - BIP32
                  - BIP44
              coinType:
                type: integer
                format: int32
                description: >-
                  BIP44 coin type. see examples of known coin types in
                  https://github.com/satoshilabs/slips/blob/master/slip-0044.md
              firstAccountName:
                type: string
                description: The name of the first account
      responses:
        '201':
          description: 'New vault created successfully, waiting for participant approval'
          schema:
            type: object
            required:
              - accountID
              - description
              - id
              - name
            properties:
              id:
                type: string
                description: Vault ID
              name:
                type: string
                description: Vault name
              description:
                type: string
                description: Vault description
              accountID:
                type: string
                description: Vault account ID
        '400':
          description: Bad Request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Missing data
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '409':
          description: Vault name already exists
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Create vault failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  /casp/api/v1.0/mng/auth/apikeys:
    get:
      tags:
        - Authentication
      summary: List API Keys
      description: List API Keys for CASP service
      operationId: listApiKeys
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              required:
                - clientId
                - expiry_in
                - scope
                - tokenType
              properties:
                clientId:
                  type: string
                  description: Api key client_id
                tokenType:
                  type: string
                  description: Api key token type
                  enum:
                    - BEARER
                expiry_in:
                  type: integer
                  format: int64
                  description: Api key expiry in
                scope:
                  type: string
                  description: Api key scope
        '400':
          description: 'Unauthorized: Invalid request'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Internal error
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
    post:
      tags:
        - Authentication
      summary: Get API Key
      description: Get API Key for CASP service
      operationId: getApiKey
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Get API key request
          required: true
          schema:
            type: object
            required:
              - client_id
              - grant_type
              - scope
            properties:
              client_id:
                type: string
                description: Owner client ID auth token will be issued for
              scope:
                type: string
                description: Auth token scope. Value MUST be set to "/mng"
              grant_type:
                type: string
                description: >-
                  Request's grant type. Value MUST be set to
                  "client_credentials"
      responses:
        '201':
          description: API key created
          schema:
            type: object
            required:
              - access_token
            properties:
              access_token:
                type: string
                description: Oauth Token for CASP service
              token_type:
                type: string
                description: Oauth Token type
              expires_in:
                type: integer
                format: int64
                description: Expiration in seconds
              scope:
                type: string
                description: Oauth token scope
        '401':
          description: 'Unauthorized: Authentication data is invalid'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '409':
          description: API key cannot be generated
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get API key failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
  '/casp/api/v1.0/mng/auth/apikeys/{client_id}':
    delete:
      tags:
        - Authentication
      summary: Revoke an Api key
      description: Revoke an Api key
      operationId: deleteApiKey
      produces:
        - application/json
      parameters:
        - name: client_id
          in: path
          description: Client_id
          required: true
          type: string
      responses:
        '200':
          description: An api key was successfully removed
        '400':
          description: 'Unauthorized: Invalid request'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: An api key removal failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
  /casp/api/v1.0/mng/auth/password:
    put:
      tags:
        - Authentication
      summary: Change user password
      description: Change user's password to the CASP service
      operationId: changePassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Change user's password request
          required: true
          schema:
            type: object
            required:
              - value
            properties:
              value:
                type: string
                description: User's password
      responses:
        '200':
          description: OK
        '401':
          description: 'Unauthorized: Invalid user name or password'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Change password failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
  /casp/api/v1.0/mng/auth/tokens:
    post:
      tags:
        - Authentication
      summary: Get access token
      description: Get access token for CASP service
      operationId: getAccessToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Get oauth token request
          required: true
          schema:
            type: object
            required:
              - grant_type
            properties:
              grant_type:
                type: string
                description: Request's grant type. Value MUST be set to "password"
      responses:
        '201':
          description: Access token created
          schema:
            type: object
            required:
              - access_token
            properties:
              access_token:
                type: string
                description: Oauth Token for CASP service
              token_type:
                type: string
                description: Oauth Token type
              expires_in:
                type: integer
                format: int64
                description: Expiration in seconds
              scope:
                type: string
                description: Oauth token scope
        '401':
          description: 'Unauthorized: Authentication data is invalid'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '409':
          description: Auth token cannot be generated
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get OAuth token failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
  '/casp/api/v1.0/mng/auth/tokens/{token_owner}':
    delete:
      tags:
        - Authentication
      summary: Revoke an access token
      description: Revoke an access token
      operationId: deleteAccessToken
      produces:
        - application/json
      parameters:
        - name: token_owner
          in: path
          description: token_owner
          required: true
          type: string
      responses:
        '200':
          description: An access token was successfully removed
        '400':
          description: 'Unauthorized: Invalid request'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: An access token removal failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
  /casp/api/v1.0/mng/auth/users:
    get:
      tags:
        - Authentication
      summary: List users
      description: List users
      operationId: listUsers
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              required:
                - enabled
                - name
              properties:
                name:
                  type: string
                  description: User name
                enabled:
                  type: boolean
                  description: User enabled state
        '400':
          description: 'Unauthorized: Invalid request'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Internal error
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
    post:
      tags:
        - Authentication
      summary: Create a new user
      description: Create a new user
      operationId: createUser
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Create user request
          required: true
          schema:
            type: object
            required:
              - name
              - password
            properties:
              name:
                type: string
                description: User's name
              password:
                type: string
                description: User's password
      responses:
        '201':
          description: New user created successfully
        '401':
          description: 'Unauthorized: Invalid user name or password'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '409':
          description: User already exists
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Create new user failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
  '/casp/api/v1.0/mng/auth/users/{user_name}':
    delete:
      tags:
        - Authentication
      summary: Remove a user
      description: Remove a user
      operationId: deleteUser
      parameters:
        - name: user_name
          in: path
          description: User Name
          required: true
          type: string
      responses:
        '200':
          description: A user was successfully removed
        '400':
          description: 'Unauthorized: Invalid request'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: A user removal failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
  '/casp/api/v1.0/mng/auth/{user_name}':
    put:
      tags:
        - Authentication
      summary: Update user
      description: Update user
      operationId: updateUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: user_name
          in: path
          description: User Name
          required: true
          type: string
        - in: body
          name: body
          description: Update user's state
          required: true
          schema:
            type: object
            properties:
              active:
                type: boolean
                description: Is user active
      responses:
        '200':
          description: A user was successfully updated
        '400':
          description: 'Unauthorized: Invalid request'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: A user removal failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - basicAuth: []
  '/casp/api/v1.0/mng/operations/addmember/{operationid}':
    get:
      tags:
        - Policy Management
      summary: Status of add member operation
      description: >-
        Adding a new participant to a vault requires approval of the quorum.
        This request queries the status of such an asynchronous operation.
      operationId: getAddMember
      produces:
        - application/json
      parameters:
        - name: operationid
          in: path
          description: Operation ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - accountID
              - createdAt
              - description
              - groupName
              - groups
              - isApproved
              - kind
              - operationID
              - participantID
              - participantName
              - status
              - statusText
              - vaultID
              - vaultName
            properties:
              operationID:
                type: string
                description: Operation ID
              kind:
                type: string
                description: Request kind
                enum:
                  - CREATE_VAULT
                  - ADD_MEMBER
                  - SIGN
              status:
                type: string
                description: Operation status
                enum:
                  - PENDING
                  - APPROVED
                  - COMPLETED
                  - DECLINED
                  - CANCELED
                  - FAILED
                  - ERROR
              statusText:
                type: string
                description: Operation status text
              createdAt:
                type: string
                description: Operation creation time
              vaultID:
                type: string
                description: Vault ID
              description:
                type: string
                description: Description of the operation
              isApproved:
                type: boolean
                description: Approval state for the operation
              accountID:
                type: string
                description: Account ID for the operation
              groups:
                type: array
                description: Operation approval groups
                items:
                  type: object
                  required:
                    - deactivateAllowed
                    - members
                    - name
                    - order
                    - requiredApprovals
                  properties:
                    name:
                      type: string
                      description: Approval group name
                    members:
                      type: array
                      description: A list of participants in the group
                      items:
                        type: object
                        required:
                          - approvalGroupAccount
                          - approvedAt
                          - id
                          - isActive
                          - isApproved
                          - isGlobal
                          - label
                          - name
                          - status
                        properties:
                          approvedAt:
                            type: string
                            description: ParticipantWithVault approval time
                          id:
                            type: string
                            description: ParticipantWithVault ID
                          isApproved:
                            type: boolean
                            description: ParticipantWithVault approval state
                          name:
                            type: string
                            description: ParticipantWithVault name
                          status:
                            type: string
                            description: ParticipantWithVault task status
                            enum:
                              - STARTED
                              - DONE
                              - DECLINED
                          approvalGroupAccount:
                            type: object
                            required:
                              - id
                              - name
                            properties:
                              id:
                                type: string
                                description: Account ID
                              name:
                                type: string
                                description: Account name
                          label:
                            type: string
                            description: ParticipantWithVault label
                          isGlobal:
                            type: boolean
                            description: ParticipantWithVault global state
                          isActive:
                            type: boolean
                    requiredApprovals:
                      type: integer
                      format: int32
                      description: >-
                        The number of group participants that need to give
                        approval
                    order:
                      type: integer
                      format: int32
                      description: >-
                        This field determines the order in which groups are
                        prompted for approvals
                    deactivateAllowed:
                      type: boolean
                      description: A group participant can be deactivated for this group
              vaultName:
                type: string
                description: Vault name for the operation
              groupName:
                type: string
                description: Group name to join
              participantName:
                type: string
                description: ParticipantWithVault name
              participantID:
                type: string
                description: ParticipantWithVault ID
        '404':
          description: Operation not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get Operation status failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/operations/sign/{operationid}':
    get:
      tags:
        - BYOW Vault Operations
      summary: Get sign operation
      description: Returns the sign operation metadata
      operationId: getSignOperationMetadata
      produces:
        - application/json
      parameters:
        - name: operationid
          in: path
          description: Operation ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - accountID
              - createdAt
              - dataToSign
              - description
              - details
              - groups
              - isApproved
              - operationID
              - providerData
              - publicKeys
              - signatures
              - status
              - statusText
              - v
              - vaultID
            properties:
              operationID:
                type: string
                description: Operation ID
              status:
                type: string
                description: Operation status
                enum:
                  - PENDING
                  - APPROVED
                  - COMPLETED
                  - DECLINED
                  - CANCELED
                  - FAILED
                  - ERROR
              statusText:
                type: string
                description: Operation status text
              createdAt:
                type: string
                description: Operation creation time
              vaultID:
                type: string
                description: Vault ID
              description:
                type: string
                description: Description of the operation
              isApproved:
                type: boolean
                description: Approval state for the operation
              accountID:
                type: string
                description: Account ID for the operation
              groups:
                type: array
                description: Operation approval groups
                items:
                  type: object
                  required:
                    - deactivateAllowed
                    - members
                    - name
                    - order
                    - requiredApprovals
                  properties:
                    name:
                      type: string
                      description: Approval group name
                    members:
                      type: array
                      description: A list of participants in the group
                      items:
                        type: object
                        required:
                          - approvalGroupAccount
                          - approvedAt
                          - id
                          - isActive
                          - isApproved
                          - isGlobal
                          - label
                          - name
                          - status
                        properties:
                          approvedAt:
                            type: string
                            description: ParticipantWithVault approval time
                          id:
                            type: string
                            description: ParticipantWithVault ID
                          isApproved:
                            type: boolean
                            description: ParticipantWithVault approval state
                          name:
                            type: string
                            description: ParticipantWithVault name
                          status:
                            type: string
                            description: ParticipantWithVault task status
                            enum:
                              - STARTED
                              - DONE
                              - DECLINED
                          approvalGroupAccount:
                            type: object
                            required:
                              - id
                              - name
                            properties:
                              id:
                                type: string
                                description: Account ID
                              name:
                                type: string
                                description: Account name
                          label:
                            type: string
                            description: ParticipantWithVault label
                          isGlobal:
                            type: boolean
                            description: ParticipantWithVault global state
                          isActive:
                            type: boolean
                    requiredApprovals:
                      type: integer
                      format: int32
                      description: >-
                        The number of group participants that need to give
                        approval
                    order:
                      type: integer
                      format: int32
                      description: >-
                        This field determines the order in which groups are
                        prompted for approvals
                    deactivateAllowed:
                      type: boolean
                      description: A group participant can be deactivated for this group
              publicKeys:
                type: array
                description: >-
                  the public corresponding to the private keys that will sign
                  teh data
                items:
                  type: string
              dataToSign:
                type: array
                description: List data to sign
                items:
                  type: string
              signatures:
                type: array
                description: Signatures
                items:
                  type: string
              v:
                type: array
                description: the recovery code
                items:
                  type: integer
                  format: int32
              providerData:
                type: string
                description: >-
                  This is a field that can be used to store information in the
                  CASP database. The information can subsequently be read back
                  as needed.
              details:
                type: string
                description: >-
                  This is a field that can be used to store formatted operation
                  information in the CASP database. The information can
                  subsequently be sent to the end point for display
              rawTransactions:
                type: array
                description: >-
                  An array of raw transaction strings that are sent to ledger.

                  The strings must all have the same format, where the format of
                  the strings depends on the ledger's hash algorithm:

                  - For SHA256, it is a hex encoded string.

                  - For NONE it is a base64 string.
                items:
                  type: string
              ledgerHashAlgorithm:
                type: string
                description: Algorithm used to create data to sign
                enum:
                  - NONE
                  - SHA256
              callbackUrl:
                type: string
                description: URL to get back to task initiator
              subAccount:
                type: integer
                format: int32
                description: the sub account index
        '404':
          description: Operation not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get Operation status failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/operations/sign/{operationid}/resend':
    post:
      tags:
        - Vault Operations
      summary: Resend sign transaction operation
      description: >-
        Resend the sign operation metadata. This tries to resend the results of
        the sign operation and complete the coin transaction
      operationId: resendProviderCallback
      produces:
        - application/json
      parameters:
        - name: operationid
          in: path
          description: Operation ID
          required: true
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Cannot resend the sign operation
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Operation not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Resend Operation failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/operations/{operationid}':
    get:
      tags:
        - Vault Operations
        - BYOW Vault Operations
      summary: Get operation status
      description: >-
        Quorum vault operations require approval of the quorum. This request
        queries the status of such an asynchronous operation.
      operationId: getOperation
      produces:
        - application/json
      parameters:
        - name: operationid
          in: path
          description: Operation ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - accountID
              - createdAt
              - description
              - groups
              - isApproved
              - kind
              - operationID
              - status
              - statusText
              - vaultID
            properties:
              operationID:
                type: string
                description: Operation ID
              kind:
                type: string
                description: Request kind
                enum:
                  - CREATE_VAULT
                  - ADD_MEMBER
                  - SIGN
              status:
                type: string
                description: Operation status
                enum:
                  - PENDING
                  - APPROVED
                  - COMPLETED
                  - DECLINED
                  - CANCELED
                  - FAILED
                  - ERROR
              statusText:
                type: string
                description: Operation status text
              createdAt:
                type: string
                description: Operation creation time
              vaultID:
                type: string
                description: Vault ID
              description:
                type: string
                description: Description of the operation
              isApproved:
                type: boolean
                description: Approval state for the operation
              accountID:
                type: string
                description: Account ID for the operation
              groups:
                type: array
                description: Operation approval groups
                items:
                  type: object
                  required:
                    - deactivateAllowed
                    - members
                    - name
                    - order
                    - requiredApprovals
                  properties:
                    name:
                      type: string
                      description: Approval group name
                    members:
                      type: array
                      description: A list of participants in the group
                      items:
                        type: object
                        required:
                          - approvalGroupAccount
                          - approvedAt
                          - id
                          - isActive
                          - isApproved
                          - isGlobal
                          - label
                          - name
                          - status
                        properties:
                          approvedAt:
                            type: string
                            description: ParticipantWithVault approval time
                          id:
                            type: string
                            description: ParticipantWithVault ID
                          isApproved:
                            type: boolean
                            description: ParticipantWithVault approval state
                          name:
                            type: string
                            description: ParticipantWithVault name
                          status:
                            type: string
                            description: ParticipantWithVault task status
                            enum:
                              - STARTED
                              - DONE
                              - DECLINED
                          approvalGroupAccount:
                            type: object
                            required:
                              - id
                              - name
                            properties:
                              id:
                                type: string
                                description: Account ID
                              name:
                                type: string
                                description: Account name
                          label:
                            type: string
                            description: ParticipantWithVault label
                          isGlobal:
                            type: boolean
                            description: ParticipantWithVault global state
                          isActive:
                            type: boolean
                    requiredApprovals:
                      type: integer
                      format: int32
                      description: >-
                        The number of group participants that need to give
                        approval
                    order:
                      type: integer
                      format: int32
                      description: >-
                        This field determines the order in which groups are
                        prompted for approvals
                    deactivateAllowed:
                      type: boolean
                      description: A group participant can be deactivated for this group
        '404':
          description: Operation not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get Operation status failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/operations/{operationid}/cancel':
    post:
      tags:
        - Vault Operations
        - BYOW Vault Operations
      summary: Cancel a pending operation
      description: ''
      operationId: cancelOperation
      produces:
        - application/json
      parameters:
        - name: operationid
          in: path
          description: Operation ID
          required: true
          type: string
      responses:
        '200':
          description: OK
        '404':
          description: Operation not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '409':
          description: Operation on running
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Cancel a pending operation failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/participants/{id}':
    get:
      tags:
        - Participants
      summary: Get participant information
      description: Get details of a participant
      operationId: getParticipant
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ParticipantWithVault ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - accountID
              - accountName
              - email
              - id
              - isActive
              - name
              - role
              - status
            properties:
              id:
                type: string
                description: Participant ID
              accountID:
                type: string
                description: Participant account ID
              name:
                type: string
                description: Participant name
              email:
                type: string
                description: Participant email
              status:
                type: string
                description: Participant status
                enum:
                  - NOT_ACTIVATED
                  - ACTIVATED
                  - DEACTIVATED
              isActive:
                type: boolean
                description: Participant activation state
              accountName:
                type: string
                description: Participant account name
              role:
                type: string
                description: Participant role
        '404':
          description: ParticipantWithVault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    put:
      tags:
        - Participants
      summary: Update an existing participant
      description: >-
        Update a participant's details.  ParticipantWithVault name and other
        attributes can be changed. It can also be used to deactivate a
        participant by setting status to <b>DEACTIVATED</b>, and reactivate a
        participant by setting status to <b>ACTIVATED</b>
      operationId: updateParticipant
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ParticipantWithVault ID
          required: true
          type: string
        - in: body
          name: body
          description: Update participant request
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: ParticipantWithVault name
              email:
                type: string
                description: ParticipantWithVault email
              role:
                type: string
                description: ParticipantWithVault role
              status:
                type: string
                description: ParticipantWithVault status
                enum:
                  - ACTIVATED
                  - DEACTIVATED
      responses:
        '200':
          description: OK
        '404':
          description: ParticipantWithVault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '409':
          description: Cannot deactivate participant
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Update participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    delete:
      tags:
        - Participants
      summary: Delete a participant
      description: >-
        Deletes a participant. A participant can be deleted only if it has no
        related vaults.
      operationId: deleteParticipant
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ParticipantWithVault ID
          required: true
          type: string
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: ParticipantWithVault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Delete participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/participants/{id}/reactivate':
    post:
      tags:
        - Participants
      summary: Regenerate activation code
      description: >-
        Regenerate activation code for an existing participant. Used when the
        activation code was lost or the participant need to be reactivated.
      operationId: regenerateActivationCode
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ParticipantWithVault ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - activationCode
              - id
              - name
            properties:
              id:
                type: string
                description: ParticipantWithVault ID
              activationCode:
                type: string
                description: Activation code for the specified participant
              name:
                type: string
                description: ParticipantWithVault name
        '404':
          description: ParticipantWithVault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Regenerate activation code failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  /casp/api/v1.0/mng/status:
    get:
      tags:
        - Getting Started
      summary: Get CASP service status
      description: Verifies that the service is healthy and operational
      operationId: getStatus
      produces:
        - application/json
      parameters:
        - name: withDetails
          in: query
          description: Include system details
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - db
              - nativeCrypto
              - ukc
              - version
            properties:
              version:
                type: string
              ukc:
                type: object
                required:
                  - healthy
                properties:
                  healthy:
                    type: boolean
                    description: Is entity healthy
                  errorMessage:
                    type: string
                    description: Error message in case entity is not healthy
              db:
                type: object
                required:
                  - healthy
                properties:
                  healthy:
                    type: boolean
                    description: Is entity healthy
                  errorMessage:
                    type: string
                    description: Error message in case entity is not healthy
              nativeCrypto:
                type: object
                required:
                  - healthy
                properties:
                  healthy:
                    type: boolean
                    description: Is entity healthy
                  errorMessage:
                    type: string
                    description: Error message in case entity is not healthy
        '500':
          description: 'Get status failed, the service is not operational'
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
  '/casp/api/v1.0/mng/vaults/{id}':
    get:
      tags:
        - BYOW Vault Operations
      summary: Get BYOW vault info
      description: Get details of a vault
      operationId: getVaultById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - accountID
              - description
              - groups
              - hierarchy
              - id
              - isActive
              - kind
              - name
              - providerData
              - status
              - statusText
            properties:
              description:
                type: string
                description: Vault description
              groups:
                type: array
                description: Vault approval groups
                items:
                  type: object
                  required:
                    - deactivateAllowed
                    - members
                    - name
                    - order
                    - requiredApprovals
                  properties:
                    name:
                      type: string
                      description: Approval group name
                    members:
                      type: array
                      description: A list of participants in the group
                      items:
                        type: object
                        required:
                          - approvalGroupAccount
                          - approvedAt
                          - id
                          - isActive
                          - isApproved
                          - isGlobal
                          - label
                          - name
                          - status
                        properties:
                          approvedAt:
                            type: string
                            description: ParticipantWithVault approval time
                          id:
                            type: string
                            description: ParticipantWithVault ID
                          isApproved:
                            type: boolean
                            description: ParticipantWithVault approval state
                          name:
                            type: string
                            description: ParticipantWithVault name
                          status:
                            type: string
                            description: ParticipantWithVault task status
                            enum:
                              - STARTED
                              - DONE
                              - DECLINED
                          approvalGroupAccount:
                            type: object
                            required:
                              - id
                              - name
                            properties:
                              id:
                                type: string
                                description: Account ID
                              name:
                                type: string
                                description: Account name
                          label:
                            type: string
                            description: ParticipantWithVault label
                          isGlobal:
                            type: boolean
                            description: ParticipantWithVault global state
                          isActive:
                            type: boolean
                    requiredApprovals:
                      type: integer
                      format: int32
                      description: >-
                        The number of group participants that need to give
                        approval
                    order:
                      type: integer
                      format: int32
                      description: >-
                        This field determines the order in which groups are
                        prompted for approvals
                    deactivateAllowed:
                      type: boolean
                      description: A group participant can be deactivated for this group
              id:
                type: string
                description: Vault ID
              name:
                type: string
                description: Vault name
              accountID:
                type: string
                description: Vault account ID
              status:
                type: string
                description: Vault textual status
                enum:
                  - NOT_INITIALIZED
                  - INITIALIZED
                  - DEACTIVATED
              statusText:
                type: string
                description: Vault status text
              kind:
                type: string
                description: Type of vault
                enum:
                  - QUORUM
                  - PRIVATE
              isActive:
                type: boolean
                description: Vault active state
              cryptoKind:
                type: string
                description: Type of cryptographic algorithm
                enum:
                  - ECDSA
                  - EDDSA
              providerKind:
                type: string
                description: Coin type that created the vault
              providerData:
                type: string
                description: >-
                  This is a field that can be used to store information in the
                  CASP database. The information can subsequently be read back
                  as needed.
              hierarchy:
                type: string
                description: Vault hierarchy
        '404':
          description: Vault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get vault details failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    put:
      tags:
        - Vault Operations
      summary: Update an existing vault
      description: >-
        Updates an existing vault. The vault name and description can be
        updated.
      operationId: updateVault
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
        - in: body
          name: body
          description: Update vault Request
          required: true
          schema:
            type: object
            required:
              - description
              - name
            properties:
              name:
                type: string
                description: Vault name
              description:
                type: string
                description: Vault description
      responses:
        '200':
          description: OK
        '404':
          description: Vault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Update vault failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    delete:
      tags:
        - Vault Operations
      summary: Delete an existing vault
      description: >-
        Deletes an existing vault. Only vaults which are not activated yet can
        be deleted.
      operationId: deleteVault
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
      responses:
        '200':
          description: OK
        '403':
          description: Vault deletion is not allowed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Vault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Delete vault failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{id}/backup':
    get:
      tags:
        - Backup
        - Keychain Management
      summary: Get vault backup data
      description: >-
        The vault cryptographic material is backed up with a key that is
        external to the CASP system. The backup can be used for safe recovery of
        the vault in case of service failure, participants losing their shares,
        or termination of CASP usage.
      operationId: getBackupForVault
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - backupData
              - vaultID
            properties:
              vaultID:
                type: string
                description: Vault ID
              backupData:
                type: string
                description: Vault backup data
        '400':
          description: Bad request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Backup not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get vault backup data failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{id}/coins':
    get:
      tags:
        - BYOW Keychain Management
      summary: List all the coins in a vault
      description: This endpoint is only functional if you generated a BIP44 vault.
      operationId: listCoins
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
        - name: skip
          in: query
          description: The number of results to skip from the beginning of the results
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Items
                items:
                  type: integer
                  format: int32
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    post:
      tags:
        - BYOW Keychain Management
      summary: Add a coin type to a vault
      description: ''
      operationId: Add coin type to a vault
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
        - in: body
          name: body
          description: Add vault group participant request
          required: true
          schema:
            type: object
            required:
              - coinType
            properties:
              coinType:
                type: integer
                format: int32
                description: The coin type
      responses:
        '200':
          description: OK
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{id}/members/{participantid}':
    put:
      tags:
        - Policy Management
        - BYOW Policy Management
      summary: Deactivate a vault member
      description: >-
        The deactivated participant no longer takes part in the vault
        transaction approval processes. Note that you can only deactivate a user
        if the remaining number of participants is sufficient for the quorum
        policy.
      operationId: setVaultMemberStatus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: participantid
          in: path
          description: ParticipantWithVault ID
          required: true
          type: string
        - name: id
          in: path
          description: vault ID
          required: true
          type: string
        - in: body
          name: body
          description: ParticipantWithVault status update request
          required: true
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                description: ParticipantWithVault status in vault
                enum:
                  - DEACTIVATED
      responses:
        '200':
          description: OK
        '403':
          description: >-
            Deactivating this participant would make the vault not operational
            (too few active participants left)
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: ParticipantWithVault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Deactivate participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{id}/sign':
    post:
      tags:
        - BYOW Vault Operations
      summary: Start a signing process
      description: >-
        Starts the process of a signing operation. 


        - For a quorum vault, the operation finishes when the minimum number of
        participants approve the transaction signing operation. 

         You can check the task status by calling the **/operations** API. When the signature is ready it is provided in the response payload.

         This service should be used when the blockchain management is done outside of CASP, as it only signs the transaction without sending it to the relevant blockchain.
      operationId: startSign
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
        - in: body
          name: body
          description: Sign Request
          required: true
          schema:
            type: object
            required:
              - dataToSign
              - description
            properties:
              dataToSign:
                type: array
                description: Data to be signed (as list of HEX strings).
                items:
                  type: string
              publicKeys:
                type: array
                items:
                  type: string
              derivationStrings:
                type: array
                description: the derivation paths to sign
                items:
                  type: string
              description:
                type: string
                description: Description of the sign request
              providerData:
                type: string
                description: >-
                  This is a field that can be used to store information in the
                  CASP database. The information can subsequently be read back
                  as needed.
              details:
                type: string
                description: >-
                  This is a field that can be used to store formatted operation
                  information in the CASP database. The information can
                  subsequently be sent to the end point for display
              callbackUrl:
                type: string
                description: URL to get back to task initiator
              allowConcurrentKeyUsage:
                type: boolean
                description: Allow concurrent key usage. The default is false
              rawTransactions:
                type: array
                description: >-
                  An array of raw transactions ledger in the specific ledger
                  format (as list of HEX strings).
                items:
                  type: string
              ledgerHashAlgorithm:
                type: string
                description: Algorithm used to calculate data to sign
                enum:
                  - IGNORE
                  - PLAIN
                  - SHA256
                  - DOUBLE_SHA256
                  - SHA3_256
      responses:
        '200':
          description: Sign request accepted
          schema:
            type: object
            required:
              - operationID
            properties:
              operationID:
                type: string
                description: Operation ID
        '400':
          description: Bad request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '403':
          description: Not allowed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Sign failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/approval_groups/{approvalGroupId}/members':
    post:
      tags:
        - BYOW Policy Management
        - Policy Management
      summary: Add member to vault
      description: >-
        This API is used if a participant becomes unavailable or leaves an
        account and needs to be replaced with a new participant. A new
        participant may be added to an existing vault, but requires the approval
        of the existing vault quorum.
      operationId: addMember
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: approvalGroupId
          in: path
          description: Approval Group Id
          required: true
          type: string
        - in: body
          name: body
          description: Add vault group participant request
          required: true
          schema:
            type: object
            required:
              - participantID
            properties:
              participantID:
                type: string
                description: ParticipantWithVault ID
              description:
                type: string
                description: Description
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - operation
              - participant
            properties:
              operation:
                description: Operation
                type: object
                required:
                  - accountID
                  - createdAt
                  - description
                  - isApproved
                  - kind
                  - operationID
                  - status
                  - statusText
                  - vaultID
                properties:
                  operationID:
                    type: string
                    description: Operation ID
                  kind:
                    type: string
                    description: Request kind
                    enum:
                      - CREATE_VAULT
                      - ADD_MEMBER
                      - SIGN
                  status:
                    type: string
                    description: Operation status
                    enum:
                      - PENDING
                      - APPROVED
                      - COMPLETED
                      - DECLINED
                      - CANCELED
                      - FAILED
                      - ERROR
                  statusText:
                    type: string
                    description: Operation status text
                  createdAt:
                    type: string
                    description: Operation creation time
                  vaultID:
                    type: string
                    description: Vault ID
                  description:
                    type: string
                    description: Description of the operation
                  isApproved:
                    type: boolean
                    description: Approval state for the operation
                  accountID:
                    type: string
                    description: Account ID for the operation
              participant:
                description: ParticipantWithVault
                type: object
                required:
                  - accountID
                  - accountName
                  - email
                  - id
                  - isActive
                  - name
                  - role
                  - status
                properties:
                  id:
                    type: string
                    description: Participant ID
                  accountID:
                    type: string
                    description: Participant account ID
                  name:
                    type: string
                    description: Participant name
                  email:
                    type: string
                    description: Participant email
                  status:
                    type: string
                    description: Participant status
                    enum:
                      - NOT_ACTIVATED
                      - ACTIVATED
                      - DEACTIVATED
                  isActive:
                    type: boolean
                    description: Participant activation state
                  accountName:
                    type: string
                    description: Participant account name
                  role:
                    type: string
                    description: Participant role
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '405':
          description: Not allowed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/backup/{publicKey}':
    get:
      tags:
        - BYOW Keychain Management
        - Backup
      summary: Get backup data for public key
      description: >-
        The vault cryptographic material is backed up with a key that is
        external to the CASP system. The backup can be used for safe recovery of
        the vault in case of service failure, participants losing their shares,
        or termination of CASP usage.


        This endpoint is only functional if you generated a BIP44 vault.
      operationId: getBackupForPublicKey
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: publicKey
          in: path
          description: public key
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - backupData
              - bipLevel
              - childNumber
              - cpar
              - parentFingerprint
              - vaultId
            properties:
              vaultId:
                type: string
                description: the vault ID
              backupData:
                type: string
                description: 'The backup data, in encrypted form'
              bipLevel:
                type: integer
                format: int32
                description: derivation level
              cpar:
                type: string
                description: CPar
              parentFingerprint:
                type: string
                description: parent fingerprint
              childNumber:
                type: integer
                format: int32
                description: child number
              publicKey:
                type: string
        '404':
          description: Vault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get vault backup data failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/coins/{coinType}/accounts':
    get:
      tags:
        - BYOW Keychain Management
      summary: List accounts in a vault
      description: |-
        List all the accounts in a vault for a given coin.

        This endpoint is only functional if you generated a BIP44 vault.
      operationId: listBip44Accounts
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: integer
          format: int32
        - name: skip
          in: query
          description: The number of results to skip from the beginning of the results
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Items
                items:
                  type: object
                  required:
                    - index
                  properties:
                    name:
                      type: string
                      description: an optional account name
                    index:
                      type: integer
                      format: int32
                      description: the account's index
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    post:
      tags:
        - BYOW Keychain Management
      summary: Create an account
      description: |-
        Add an account to a coin in a vault. 

        This endpoint is only functional if you generated a BIP44 vault.
      operationId: addBip44Account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: Add account request
          required: false
          schema:
            type: object
            required:
              - accountName
            properties:
              accountName:
                type: string
                description: The account name
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - accountIndex
              - publicKeys
            properties:
              publicKeys:
                type: array
                description: the public keys
                items:
                  type: string
              accountName:
                type: string
                description: the account's name
              accountIndex:
                type: integer
                format: int32
                description: the account's index
        '400':
          description: Bad Request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '405':
          description: Vault hierarchy is not BIP 44
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '409':
          description: Account name already exists
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/coins/{coinType}/accounts/find':
    get:
      tags:
        - BYOW Keychain Management
      summary: Find account index by name
      description: This endpoint is only functional if you generated a BIP44 vault.
      operationId: findBip44AccountIndexByName
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: integer
          format: int32
        - name: accountName
          in: query
          description: Account name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - index
            properties:
              index:
                type: integer
                format: int32
                description: The account index
        '404':
          description: Account index not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: find account index failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/coins/{coinType}/accounts/{accountIdentifier}':
    get:
      tags:
        - BYOW Keychain Management
      summary: Get account by identifier
      description: >-
        Get detailed information, including the public keys, about a vault for a
        given coin type and account index.
      operationId: getBip44AccountByIdentifier
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: integer
          format: int32
        - name: accountIdentifier
          in: path
          description: 'Account identifier, which can be the index or the name'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - accountIndex
            properties:
              accountName:
                type: string
                description: the account's name
              accountIndex:
                type: integer
                format: int32
                description: the account's index
        '400':
          description: Request incorrectly formed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/coins/{coinType}/accounts/{accountIdentifier}/backup':
    get:
      tags:
        - Backup
        - BYOW Keychain Management
      summary: Get backup for account
      description: |-
        Get backup for BIP44 account.

        This endpoint is only functional if you generated a BIP44 vault.
      operationId: getBackupForBip44Account
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: integer
          format: int32
        - name: accountIdentifier
          in: path
          description: 'Account identifier, which can be the index or the name'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - backupData
              - bipLevel
              - childNumber
              - cpar
              - parentFingerprint
              - vaultId
            properties:
              vaultId:
                type: string
                description: the vault ID
              backupData:
                type: string
                description: 'The backup data, in encrypted form'
              bipLevel:
                type: integer
                format: int32
                description: derivation level
              cpar:
                type: string
                description: CPar
              parentFingerprint:
                type: string
                description: parent fingerprint
              childNumber:
                type: integer
                format: int32
                description: child number
              publicKey:
                type: string
        '404':
          description: Vault not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get account backup failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/coins/{coinType}/accounts/{accountIdentifier}/operations':
    get:
      tags:
        - BYOW Vault Operations
      summary: List sub account operations
      description: ''
      operationId: listSubAccountOperations
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: integer
          format: int32
        - name: accountIdentifier
          in: path
          description: 'Account identifier, which can be the index or the name'
          required: true
          type: string
        - name: skip
          in: query
          description: The number of results to skip from the beginning of the results
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Items
                items:
                  type: object
                  required:
                    - accountID
                    - createdAt
                    - description
                    - isApproved
                    - kind
                    - operationID
                    - status
                    - statusText
                    - vaultID
                  properties:
                    operationID:
                      type: string
                      description: Operation ID
                    kind:
                      type: string
                      description: Request kind
                      enum:
                        - CREATE_VAULT
                        - ADD_MEMBER
                        - SIGN
                    status:
                      type: string
                      description: Operation status
                      enum:
                        - PENDING
                        - APPROVED
                        - COMPLETED
                        - DECLINED
                        - CANCELED
                        - FAILED
                        - ERROR
                    statusText:
                      type: string
                      description: Operation status text
                    createdAt:
                      type: string
                      description: Operation creation time
                    vaultID:
                      type: string
                      description: Vault ID
                    description:
                      type: string
                      description: Description of the operation
                    isApproved:
                      type: boolean
                      description: Approval state for the operation
                    accountID:
                      type: string
                      description: Account ID for the operation
        '500':
          description: List sub account operations failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/coins/{coinType}/accounts/{accountIndex}/chains/{chain}/addresses':
    get:
      tags:
        - BYOW Keychain Management
      summary: List chain addresses
      description: >-
        List all the public keys for addresses in a vault for a given coin type,
        account index and address chain type.


        This endpoint is only functional if you generated a BIP44 vault.
      operationId: listBip44ChainAddresses
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: integer
          format: int32
        - name: accountIndex
          in: path
          description: Account index
          required: true
          type: integer
          format: int32
        - name: chain
          in: path
          description: Address type
          required: true
          type: string
          enum:
            - change
            - external
            - all
        - name: skip
          in: query
          description: The number of results to skip from the beginning of the results
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                description: Items
                type: object
                required:
                  - accountIndex
                  - publicKeys
                properties:
                  publicKeys:
                    type: array
                    description: the public keys
                    items:
                      type: string
                  accountName:
                    type: string
                    description: the account's name
                  accountIndex:
                    type: integer
                    format: int32
                    description: the account's index
        '400':
          description: Bad request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    post:
      tags:
        - BYOW Vault Operations
        - Vault Operations
      summary: Create a new address
      description: ''
      operationId: addBip44Address
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: integer
          format: int32
        - name: accountIndex
          in: path
          description: Account index
          required: true
          type: integer
          format: int32
        - name: chain
          in: path
          description: Add vault group member request
          required: true
          type: string
          enum:
            - change
            - external
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - publicKey
            properties:
              publicKey:
                type: string
                description: The public key of the new address
        '400':
          description: Bad request
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/derivation':
    get:
      tags:
        - BYOW Keychain Management
      summary: Get public key by derivation path
      description: This endpoint is only functional if you generated a BIP44 vault.
      operationId: getBip32DerivationByPublicKey
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: derivationPath
          in: query
          description: Derivation path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - derivationPath
              - publicKey
            properties:
              derivationPath:
                type: string
                description: the public derivation path
              publicKey:
                type: string
                description: the public key
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Get derivation failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/derivations':
    get:
      tags:
        - BYOW Keychain Management
      summary: List all keys in a vault
      description: This endpoint is only functional if you generated a BIP44 vault.
      operationId: listBip32Derivations
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: skip
          in: query
          description: The number of results to skip from the beginning of the results
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Items
                items:
                  type: object
                  required:
                    - derivationPath
                    - publicKey
                  properties:
                    derivationPath:
                      type: string
                      description: the public derivation path
                    publicKey:
                      type: string
                      description: the public key
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
    post:
      tags:
        - BYOW Keychain Management
      summary: Derive a key in a vault
      description: This endpoint is only functional if you generated a BIP44 vault.
      operationId: addBip32derivation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - in: body
          name: body
          description: Derive a keypair in a vault
          required: false
          schema:
            type: object
            required:
              - childIndex
              - hardDerivation
              - pathToDeriveFrom
            properties:
              pathToDeriveFrom:
                type: string
                description: The derivation path to derive from
              hardDerivation:
                type: boolean
                description: Use hard derivation
              childIndex:
                type: integer
                format: int32
                description: The child index
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - derivationPath
              - publicKey
            properties:
              derivationPath:
                type: string
                description: the public derivation path
              publicKey:
                type: string
                description: the public key
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/casp/api/v1.0/mng/vaults/{vaultId}/publickey':
    get:
      tags:
        - BYOW Keychain Management
      summary: Get vault public key
      description: >-
        Returns a deterministic vault's public key. Note that this is only valid
        for a vault with no hierarchy.
      operationId: getVaultPublicKey
      produces:
        - application/json
      parameters:
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - publicKey
            properties:
              publicKey:
                type: string
                description: Vault's public key
        '400':
          description: Request incorrectly formed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '404':
          description: Item not found
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '406':
          description: Not supported
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
        '500':
          description: Add participant failed
          schema:
            type: object
            required:
              - details
              - status
              - title
              - type
            properties:
              type:
                type: string
                description: Error identification
              title:
                type: string
                description: Error summary
              details:
                type: string
                description: Error details
              status:
                type: integer
                format: int64
                description: Original HTTP status code
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/addresses/{address}/balance':
    get:
      tags:
        - vaults
      summary: Get balance of a specific address
      description: Returns a balance for a specific address
      operationId: getAddressBalance
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: address
          in: path
          description: Target address for which balanc is requested
          required: true
          type: string
        - name: contractAddress
          in: query
          description: >-
            Contract Address (For use ETH-ERC20 coins only) for getting balance
            of ERC20 token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              amount:
                type: number
                format: double
                description: Withdrawal amount
        '404':
          description: Vault not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Get address balance
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
      x-swagger-router-controller: Vaults
  '/{coinType}/api/v1.0/accounts/{id}/vaults':
    get:
      tags:
        - Vault Operations
      summary: List vaults
      description: >-
        List all vaults for specified kind in the account. By default only
        active vaults are listed.
      operationId: listCoinTypeVaults
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
        - name: withDeactivated
          in: query
          description: Include deactivated vaults
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
              required:
                - accountID
                - description
                - hierarchy
                - id
                - name
                - status
                - statusText
              properties:
                id:
                  type: string
                  description: Vault ID
                description:
                  type: string
                  description: Vault description
                name:
                  type: string
                  description: Vault name
                accountID:
                  type: string
                  description: Vault account
                status:
                  type: string
                  description: Vault status
                  enum:
                    - NOT_INITIALIZED
                    - INITIALIZED
                    - DEACTIVATED
                statusText:
                  type: string
                  description: Vault status text
                hierarchy:
                  type: boolean
                  description: Vault hierarchy
        '404':
          description: Account not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: List vaults per account failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
    post:
      tags:
        - Vault Operations
      summary: Create a new vault
      description: >-
        This request starts the process of creating a new quorum vault. The
        vault is created only after the participants approve the vault creation
        according to the vault policy.
      operationId: createCoinTypeVault
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: id
          in: path
          description: Account ID
          required: true
          type: string
        - in: body
          name: body
          description: Create Vault Request
          required: true
          schema:
            type: object
            required:
              - groups
              - name
            properties:
              name:
                type: string
                description: Vault name
              description:
                type: string
                description: Vault description
              hierarchy:
                type: boolean
                description: >-
                  True to create a BIP44 hierarchy, false to create a
                  deterministic vault
              firstAccountName:
                type: string
                description: The name of the first account
              subAccountsToDerive:
                type: integer
                format: int32
                description: The amount of BIP44 accounts to derive
              groups:
                type: array
                description: Vault approval groups
                items:
                  type: object
                  required:
                    - members
                    - name
                    - requiredApprovals
                  properties:
                    name:
                      type: string
                      description: Vault group name
                    requiredApprovals:
                      type: integer
                      format: int32
                      description: Vault group required approvals
                    members:
                      type: array
                      description: Vault group members
                      items:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
                            description: Participant ID
      responses:
        '201':
          description: 'New vault created successfully, waiting for participant approval'
          schema:
            type: object
            required:
              - accountID
              - description
              - name
              - vaultID
            properties:
              id:
                type: string
                description: Vault ID
              name:
                type: string
                description: Vault name
              description:
                type: string
                description: Vault description
              accountID:
                type: string
                description: Vault account ID
        '404':
          description: Missing data
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '409':
          description: Vault already exists
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Create vault failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/status':
    get:
      tags:
        - Getting Started
      summary: Get coin type service status
      description: Verifies that the service is healthy and operational
      operationId: getCoinTypeServiceStatus
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: withDetails
          in: query
          description: Include system details
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              version:
                type: string
              ledger:
                type: object
                properties:
                  healthy:
                    type: boolean
                  errorMessage:
                    type: string
              casp:
                type: object
                properties:
                  healthy:
                    type: boolean
                  errorMessage:
                    type: string
        '500':
          description: 'Get status failed, the service is not operational'
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
  '/{coinType}/api/v1.0/vaults/{id}':
    get:
      tags:
        - Vault Operations
      summary: Get vault info
      description: Get details of a vault
      operationId: getCoinTypeVaultInfo
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
        - name: bip44account
          in: query
          description: The account index
          required: false
          type: integer
          format: int32
        - name: contractAddress
          in: query
          required: false
          type: string
          description: Contract Address (For use ETH-ERC20 coins only)
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - accountID
              - description
              - hierarchy
              - id
              - name
              - status
              - statusText
            properties:
              id:
                type: string
                description: Vault ID
              description:
                type: string
                description: Vault description
              name:
                type: string
                description: Vault name
              accountID:
                type: string
                description: Vault account
              status:
                type: string
                description: Vault status
                enum:
                  - NOT_INITIALIZED
                  - INITIALIZED
                  - DEACTIVATED
              statusText:
                type: string
                description: Vault status text
              hierarchy:
                type: boolean
                description: Vault hierarchy
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '404':
          description: Vault not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Get vault details failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/vaults/{id}/withdrawals':
    post:
      tags:
        - Vault Operations
      summary: Start withdrawal process
      description: >-
        Starts the process of a quorum-based transaction signing operation that
        is used when withdrawing a cryptoasset.

         The operation finishes when the minimum number of participants approve the transaction signing operation. 

         You can check the task status by calling the **/withdrawals** service. This service should be used when the blockchain management is done within CASP, as it will sign the transaction and send it to the relevant blockchain.
      operationId: startCoinTypeWithdrawal
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
        - in: body
          name: body
          description: Withdrawal Request
          required: true
          schema:
            type: object
            required:
              - amount
              - description
              - fee
              - recipientAddress
            properties:
              amount:
                type: number
                format: double
                description: Transaction amount
              recipientAddress:
                type: string
                description: Recipient address for the transaction
              fee:
                type: string
                description: Transaction fee
                enum:
                  - LOW
                  - MEDIUM
                  - HIGH
              description:
                type: string
                description: Transaction description
              bip44AccountIndex:
                type: integer
                format: int32
                description: The account index
              contractAddress:
                type: string
                description: Contract Address (For use ETH-ERC20 coins only)
      responses:
        '200':
          description: Withdrawal request accepted
          schema:
            type: object
            required:
              - operationID
            properties:
              operationID:
                type: string
                description: Operation ID
        '400':
          description: Bad withdrawal request
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '403':
          description: Not allowed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '404':
          description: Missing data
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '406':
          description: Not supported
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Withdrawal failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/vaults/{vaultId}/accounts':
    get:
      tags:
        - Keychain Management
      summary: List accounts per coin type
      description: ''
      operationId: listCoinTypeAccounts
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: skip
          in: query
          description: The number of results to skip from the beginning of the results
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Items
                items:
                  type: object
                  required:
                    - index
                    - name
                  properties:
                    id:
                      type: string
                      description: Account index
                    name:
                      type: string
                      description: Account name
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '403':
          description: Not allowed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '404':
          description: Missing data
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '406':
          description: Not supported
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Operation failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
    post:
      tags:
        - Keychain Management
      summary: Add account per coin type
      description: ''
      operationId: addCoinTypeAccount
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - in: body
          name: body
          description: Add account request
          required: false
          schema:
            type: object
            required:
              - accountName
            properties:
              accountName:
                type: string
                description: The account name
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - balance
              - index
              - name
            properties:
              balance:
                type: number
                format: double
                description: Account's balance
              name:
                type: string
                description: Account's name
              index:
                type: integer
                format: int32
                description: Account's index
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '403':
          description: Not allowed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '404':
          description: Missing data
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '406':
          description: Not supported
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Operation failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/vaults/{vaultId}/accounts/{accountIdentifier}':
    get:
      tags:
        - Keychain Management
      summary: Get account information
      description: Get account information for a specific coin type
      operationId: getCoinTypeAccountInformation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: accountIdentifier
          in: path
          description: Account index or account name
          required: true
          type: string
        - name: contractAddress
          in: query
          required: false
          type: string
          description: Contract Address (For use ETH-ERC20 coins only)
      responses:
        '200':
          description: Account addresses and total balance
          schema:
            type: object
            required:
              - index
              - name
            properties:
              name:
                type: string
                description: Account's name
              index:
                type: integer
                format: int32
                description: Account's index
        '404':
          description: Account not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/vaults/{id}/address':
    get:
      tags:
        - Vault Operations
      summary: Get vault info
      description: Get address of a deterministic vault
      operationId: getVaultAddress
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
        - name: skip
          in: query
          description: The number of results to skip from the beginning of the results
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - vaultAddress
            properties:
              vaultAddress:
                type: string
                description: Vault address
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '404':
          description: Vault not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Get vault details failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/vaults/{id}/balance':
    get:
      tags:
        - Vault Operations
      summary: Get details of a vault
      description: Get deterministic vault balance
      operationId: getVaultBalance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: id
          in: path
          description: Vault ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              balance:
                type: number
                format: double
                description: Vault balance
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '404':
          description: Vault not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Get vault details failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/vaults/{vaultId}/accounts/{accountId}/balance':
    get:
      tags:
        - Vault Operations
      summary: Get BIP44 account information
      description: Get the balance of an BIP44 account
      operationId: getBip44AccountBalance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: accountId
          in: path
          description: Account index or account name
          required: true
          type: string
      responses:
        '200':
          description: BIP44 account addresses and total balance
          schema:
            type: object
            required:
              - balance
              - index
              - name
            properties:
              balance:
                type: number
                format: double
                description: Account's balance
              name:
                type: string
                description: Account's name
              index:
                type: integer
                format: int32
                description: Account's index
        '404':
          description: BIP44 account not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/vaults/{vaultId}/accounts/{accountIdentifier}/addresses':
    get:
      tags:
        - Vault Operations
      summary: Get BIP44 account information
      description: Get the addresses of an BIP44 account
      operationId: getBip44AccountAddresses
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: accountIdentifier
          in: path
          description: Account index or account name
          required: true
          type: string
        - name: skip
          in: query
          description: The number of results to skip from the beginning of the results
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: BIP44 account addresses and total balance
          schema:
            type: object
            required:
              - items
              - totalItems
            properties:
              totalItems:
                type: integer
                format: int32
                description: Total Items
              items:
                type: array
                description: Vault addresses
                items:
                  type: string
        '404':
          description: BIP44 account not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
    post:
      tags:
        - Vault Operations
      summary: Create an external address
      description: >-
        Create a new BIP44 external address. See the Keychain Management section
        for more information.
      operationId: createCoinTypeExternalAddress
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: vaultId
          in: path
          description: Vault ID
          required: true
          type: string
        - name: accountIdentifier
          in: path
          description: The account index
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              address:
                type: string
                description: This generated address
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '404':
          description: Item not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '406':
          description: Not supported
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Add participant failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
  '/{coinType}/api/v1.0/withdrawals/{operationid}':
    get:
      tags:
        - Vault Operations
      summary: Get withdrawal information
      description: >-
        Signing a withdrawal with a quorum vault requires approval of the
        quorum. This request queries the withdrawal information and status of
        such an asynchronous operation.
      operationId: getCoinTypeWithdrawalInformation
      produces:
        - application/json
      parameters:
        - name: coinType
          in: path
          description: Coin type
          required: true
          type: string
        - name: operationid
          in: path
          description: Operation ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - amount
              - createdAt
              - dataToSign
              - description
              - details
              - fee
              - recipientAddress
              - signatures
              - status
              - statusText
              - vaultId
            properties:
              status:
                type: string
                description: Operation status
                enum:
                  - PENDING
                  - APPROVED
                  - COMPLETED
                  - DECLINED
                  - CANCELED
                  - FAILED
                  - ERROR
              statusText:
                type: string
                description: Operation status text
              createdAt:
                type: string
                description: Operation creation time
              vaultId:
                type: string
                description: Vault ID
              description:
                type: string
                description: Description of the operation
              amount:
                type: number
                format: double
                description: Withdrawal amount
              fee:
                type: string
                description: Withdrawal fee
              recipientAddress:
                type: string
                description: Recipient address
              details:
                type: string
                description: >-
                  This is a field that can be used to store formatted operation
                  information in the CASP database. The information can
                  subsequently be sent to the end point for display
              transactionID:
                type: string
                description: Withdrawal transaction ID
              dataToSign:
                type: array
                description: List of data to sign
                items:
                  type: string
              signatures:
                type: array
                description: Signatures
                items:
                  type: string
        '404':
          description: Withdrawal operation not found
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '500':
          description: Get Operation details failed
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
        '503':
          description: CASP service is not available
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
              details:
                type: string
              status:
                type: integer
                format: int64
      security:
        - Authorization: []
securityDefinitions:
  Authorization:
    description: 'Usage: Bearer  &lt;Token&gt;'
    type: apiKey
    name: Authorization
    in: header
  basicAuth:
    type: basic
